<?xml version="1.0"?><doc>
    <assembly>
        <name>DSOffice</name>
    </assembly>
    <members>
        <member name="P:DSOffice.ExcelInterop.ExcelProcessRunning">
            <summary>Verificar se o processo do Excel está em execução</summary>
        </member>
        <member name="P:DSOffice.ExcelInterop.HasValidExcelReference">
            <summary>Verifique se este objeto contém uma referência para o Excel</summary>
        </member>
        <member name="M:DSOffice.ExcelInterop.TryQuitAndCleanup(System.Boolean)">
            <summary>Feche todas as planilhas do Excel e forneça a caixa de diálogo Salvar como, se necessário.  Também, execute a coleta de lixo e remova referências para o aplicativo Excel</summary>
        </member>
        <member name="M:DSOffice.Excel.ReadExcelFile(System.IO.FileInfo)">
            <summary>Lê o arquivo do Excel especificado e retorna um livro de trabalho</summary>
            <param name="file"/>
            <returns/>
        </member>
        <member name="M:DSOffice.Excel.GetWorksheetsFromExcelWorkbook(DSOffice.WorkBook)">
            <summary>Retorna uma lista as planilhas presentes no livro de trabalho do Excel especificado</summary>
            <param name="workbook"/>
            <returns/>
        </member>
        <member name="M:DSOffice.Excel.GetExcelWorksheetByName(DSOffice.WorkBook,System.String)">
            <summary>Retorna a planilha do livro de trabalho especificado por seu nome</summary>
            <param name="workbook"/>
            <param name="name"/>
            <returns/>
        </member>
        <member name="M:DSOffice.Excel.GetDataFromExcelWorksheet(DSOffice.WorkSheet)">
            <summary>Lê e recupera os dados da planilha do Excel especificada</summary>
            <param name="worksheet"/>
            <returns/>
        </member>
        <member name="M:DSOffice.Excel.WriteDataToExcelWorksheet(DSOffice.WorkSheet,System.Int32,System.Int32,System.Object[][])">
            <summary>Insere os dados fornecidos no número de linha e coluna especificado (base 0) da determinada planilha
            e retorna a planilha</summary>
            <param name="worksheet"/>
            <param name="startRow"/>
            <param name="startColumn"/>
            <param name="data"/>
            <returns/>
        </member>
        <member name="M:DSOffice.Excel.AddExcelWorksheetToWorkbook(DSOffice.WorkBook,System.String)">
            <summary>Adiciona uma nova planilha do Excel com o nome especificado na determinada pasta de trabalho</summary>
            <param name="workbook"/>
            <param name="name"/>
            <returns/>
        </member>
        <member name="M:DSOffice.Excel.NewExcelWorkbook">
            <summary>Cria uma nova pasta de trabalho do Excel temporária</summary>
            <returns/>
        </member>
        <member name="M:DSOffice.Excel.SaveAsExcelWorkbook(DSOffice.WorkBook,System.String)">
            <summary>Salva o livro de trabalho do Excel especificado no caminho do arquivo especificado e o retorna</summary>
            <param name="workbook"/>
            <param name="filename"/>
            <returns/>
        </member>
        <member name="M:DSOffice.Excel.ReadFromFile(System.IO.FileInfo,System.String,System.Boolean,System.Boolean)">
            <summary>Lê os dados de uma planilha do Microsoft Excel. Os dados são lidos por linha e
                retornados em uma série de listas por linha. As linhas e colunas são indexadas em zero.
                Por exemplo, o valor na célula A1 irá aparecer na lista dos dados em [0,0].
                Este nó requer que o Microsoft Excel seja instalado.</summary>
            <param name="file">Arquivo que representa a planilha do Microsoft Excel.</param>
            <param name="sheetName">Nome da folha da planilha que contém os dados.</param>
            <param name="readAsStrings">alterar para alternar entre ler o arquivo do Excel somente como sequências de caracteres ou não</param>
            <param name="showExcel">ativar para alternar entre exibir e ocultar a janela principal do Excel</param>
            <returns name="data">Linhas de dados da planilha do Excel.</returns>
            <search>office,excel,spreadsheet,ifequalreturnindex</search>
        </member>
        <member name="M:DSOffice.Excel.WriteToFile(System.String,System.String,System.Int32,System.Int32,System.Object[][],System.Boolean)">
            <summary>Inserir os dados em uma uma planilha do Microsoft Excel. Os dados são inseridos por linha
                com sublistas a serem escritas em linhas sucessivas. As linhas e colunas são
                indexadas em zero; por exemplo, o valor na lista dos dados em [0,0] será
                inserido na célula A1. O valores nulos e as listas vazias serão inseridos
                no Excel como células vazias. Este nó requer que o Microsoft Excel esteja instalado.</summary>
            <param name="filePath">O caminho do arquivo para a planilha do Microsoft Excel.</param>
            <param name="sheetName">Nome da planilha para na qual gravar os dados.</param>
            <param name="startRow">Linha inicial para gravar os dados. Insira 0 para linha 1, 1 para linha 2 etc.</param>
            <param name="startCol">Coluna inicial para gravar os dados. Insira 0 para a coluna A, 1 para a coluna B etc.</param>
            <param name="data">Dados para gravar na planilha.</param>
            <param name="overWrite"/>
            <returns name="data">Os dados escritos na planilha.</returns>
            <search>office,excel,spreadsheet</search>
        </member>
        <member name="P:DSOffice.WorkSheet.Data">
            <summary>Retorna os dados de uma determinada planilha (nó GetDataFromExcelWorksheet)</summary>
        </member>
        <member name="M:DSOffice.WorkSheet.#ctor(DSOffice.WorkBook,System.String,System.Boolean)">
            <summary>criar nova planilha do determinado livro de trabalho e nome (Nó AddExcelWorksheetToWorkbook)</summary>
            <param name="wbook"/>
            <param name="sheetName"/>
            <param name="overWrite"/>
        </member>
        <member name="M:DSOffice.WorkSheet.WriteData(System.Int32,System.Int32,System.Object[][],System.Boolean)">
            <summary>método de instância, gravar dados na planilha existente, (nó WriteDataToExcelWorksheet)</summary>
            <param name="startRow"/>
            <param name="startColumn"/>
            <param name="data"/>
            <param name="writeAsString"/>
            <returns/>
        </member>
        <member name="P:DSOffice.WorkBook.Name">
            <summary/>
        </member>
        <member name="P:DSOffice.WorkBook.WorkSheets">
            <summary>(Nó GetWorksheetsFromExcelWorkbook)</summary>
        </member>
        <member name="M:DSOffice.WorkBook.#ctor(System.String)">
            <summary>Cria um novo livro de trabalho com o caminho do arquivo e o nome da folha como entrada</summary>
        </member>
        <member name="M:DSOffice.WorkBook.CloseHidden">
            <summary>Método de ajuda para leitura de planilhas com uma visibilidade desativada.</summary>
        </member>
        <member name="M:DSOffice.WorkBook.#ctor(DSOffice.WorkBook,System.String)">
            <summary>(Nó SaveAsExcelWorkbook)</summary>
            <param name="wbook"/>
            <param name="filename"/>
        </member>
        <member name="M:DSOffice.WorkBook.ReadExcelFile(System.String)">
            <summary>(Nó ReadExcelFile)</summary>
            <param name="path"/>
            <returns/>
        </member>
        <member name="M:DSOffice.WorkBook.GetWorksheetByName(System.String)">
            <summary>método de instância, (Nó GetExcelWorksheetByName)</summary>
            <param name="sheetName"/>
            <returns/>
        </member>
        <member name="T:DSOffice.Data">
            <summary>Métodos para importar/exportar categoria.</summary>
        </member>
        <member name="M:DSOffice.Data.ExportCSV(System.String,System.Object[][])">
            <summary>Grave uma lista de listas em um arquivo no formato de valores separados por 
 vírgulas. A lista externa representa as linhas, as listas internas representam as colunas.</summary>
            <param name="filePath">Caminho para gravação</param>
            <param name="data">Lista das listas para gravar em CSV</param>
            <search>write,text,file</search>
        </member>
        <member name="M:DSOffice.Data.ImportCSV(System.String,System.Boolean)">
            <summary>Importa dados de um arquivo CSV (valores separados por vírgulas), coloca os itens em uma lista e 
 os transpõe se necessário.</summary>
            <param name="filePath">Arquivo CSV a ser convertido em uma lista</param>
            <param name="transpose">Alternar para transpor os dados importados</param>
            <returns name="list">Lista que contém os itens no arquivo CSV</returns>
            <search>import,csv,comma,file,list,separate,transpose</search>
        </member>
        <member name="M:DSOffice.Data.ImportExcel(System.IO.FileInfo,System.String,System.Boolean,System.Boolean)">
            <summary>Lê os dados de uma planilha do Microsoft Excel. Os dados são lidos por linha e
                retornados em uma série de listas por linha. As linhas e colunas são indexadas em zero.
                Por exemplo, o valor na célula A1 irá aparecer na lista dos dados em [0,0].
                Este nó requer que o Microsoft Excel seja instalado.</summary>
            <param name="file">Arquivo representando a pasta de trabalho do Excel</param>
            <param name="sheetName">Nome da planilha que contém os dados</param>
            <param name="readAsStrings">Alternar para ler células como sequências de caracteres</param>
            <param name="showExcel">Alternar para exibir a janela principal do Excel</param>
            <returns name="data">Linhas de dados na planilha do Excel</returns>
            <search>office,excel,spreadsheet,ifequalreturnindex</search>
        </member>
        <member name="M:DSOffice.Data.ExportExcel(System.String,System.String,System.Int32,System.Int32,System.Object[][],System.Boolean)">
            <summary>Inserir os dados em uma planilha do Microsoft Excel. Os dados são inseridos por linha
                com sublistas a serem escritas em linhas sucessivas. As linhas e colunas são
                indexadas em zero; por exemplo, o valor na lista dos dados em [0,0] será
                inserido na célula A1. Os valores nulos e as listas vazias serão inseridos
                no Excel como células vazias. Este nó requer que o Microsoft Excel esteja instalado.</summary>
            <param name="filePath">Caminho do arquivo para a planilha do Microsoft Excel</param>
            <param name="sheetName">Nome da planilha na qual os dados devem gravados</param>
            <param name="startRow">Linha inicial para gravar os dados. Insira 0 para linha 1, 1 para linha 2 etc.</param>
            <param name="startColumn">Coluna inicial para gravar os dados. Insira 0 para a coluna A, 1 para a coluna B etc.</param>
            <param name="data">Dados para gravar na planilha</param>
            <param name="overWrite">Verdadeiro para substituir o arquivo; falso para não substituir</param>
            <returns name="data">Dados gravados na planilha</returns>
            <search>office,excel,spreadsheet</search>
        </member>
        <member name="M:DSOffice.Data.ExportToExcel(System.String,System.String,System.Int32,System.Int32,System.Object[][],System.Boolean,System.Boolean)">
            <summary>Inserir dados em uma planilha do Microsoft Excel. Os dados são inseridos por linha
                com sublistas a serem escritas em linhas sucessivas. As linhas e colunas são
                indexadas em zero; por exemplo, o valor na lista dos dados em [0,0] será
                inserido na célula A1. O valores nulos e as listas vazias serão inseridos no
                Excel como células vazias. Esse nó requer que o Microsoft Excel esteja instalado.</summary>
            <param name="filePath">Arquivo representando a pasta de trabalho do Excel</param>
            <param name="sheetName">Nome da planilha que contém os dados</param>
            <param name="startRow">Linha inicial para gravar os dados. Insira 0 para linha 1, 1 para linha 2 etc.</param>
            <param name="startColumn">Coluna inicial para gravar os dados. Insira 0 para a coluna A, 1 para a coluna B etc.</param>
            <param name="data">Dados para gravar na planilha</param>
            <param name="overWrite">Alterne para limpar a planilha antes de gravar</param>
            <param name="writeAsString">Alterne para alterar a opção de gravar o arquivo do Excel como sequências de caracteres</param>
            <returns name="data">Linhas de dados na planilha do Excel</returns>
            <search>office,excel,spreadsheet</search>
        </member>
        <member name="M:DSOffice.Data.OpenXMLImportExcel(System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>Ler dados de uma planilha do Microsoft Excel usando o padrão Open XML.
            Os dados são lidos por linha e retornados em uma série de listas por linha.
            As linhas e colunas são indexadas com zero; por exemplo, o valor na célula A1
             aparecerá na lista de dados em [0,0].</summary>
            <param name="filePath">Arquivo representando a pasta de trabalho do Excel</param>
            <param name="sheetName">Nome da planilha contendo os dados</param>
            <param name="startRow">Linha inicial para ler os dados. Insira 0 para a linha 1, 1 para a linha 2 etc.</param>
            <param name="startColumn">Coluna inicial para ler os dados. Insira 0 para a coluna A, 1 para a coluna B etc.</param>
            <param name="readAsString">Ativar/desativar para ler as células como sequências de caracteres</param>
            <returns name="data">Linhas de dados na planilha do Excel</returns>
            <search>office,excel,spreadsheet</search>
        </member>
        <member name="M:DSOffice.Data.OpenXMLExportExcel(System.String,System.String,System.Object[][],System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>Gravar dados em uma planilha do Microsoft Excel usando o padrão Open XML.
            Os dados são gravados por linha com sublistas a serem gravadas em linhas sucessivas.
            As linhas e colunas são indexadas com zero; por exemplo, o valor na lista de dados em [0,0] será
            gravado na célula A1. Valores nulos e listas vazias serão gravados como células vazias.</summary>
            <param name="filePath">Arquivo representando a pasta de trabalho do Excel</param>
            <param name="sheetName">Nome da planilha contendo os dados</param>
            <param name="startRow">Linha inicial para gravar os dados. Insira 0 para a linha 1, 1 para a linha 2 etc.</param>
            <param name="startColumn">Coluna inicial para gravar os dados. Insira 0 para a coluna A, 1 para a coluna B etc.</param>
            <param name="data">Dados a serem gravados na planilha</param>
            <param name="overWrite">Ativar/desativar para limpar a planilha antes de gravar</param>
            <param name="writeAsString">Ativar/desativar para alternar entre gravar valores da célula como sequências de caracteres</param>
            <search>office,excel,spreadsheet</search>
            <returns>Booleano que indica se a gravação na planilha foi feita com êxito.</returns>
        </member>
        <member name="T:DSOffice.OpenXmlHelper">
            <summary>Trata da leitura e gravação de arquivos do Excel usando o SDK do Open XML.</summary>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.Read(System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>Lê os dados de uma planilha do Excel usando o SDK do Open XML.</summary>
            <param name="filePath">Caminho para o arquivo da pasta de trabalho do Excel</param>
            <param name="sheetName">Nome da folha a ser lida na pasta de trabalho</param>
            <param name="startRow">Linha onde deve começar a leitura (com base em zero)</param>
            <param name="startColumn">Coluna onde deve começar a leitura (com base em zero)</param>
            <param name="readAsString">Se os valores da célula devem ser lidos como sequências de caracteres ou não</param>
            <returns>Valores das células lidos na planilha</returns>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.Write(System.String,System.String,System.Object[][],System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>Grava dados em uma planilha do Excel usando o SDK do Open XML.</summary>
            <param name="filePath">Caminho para o arquivo da pasta de trabalho do Excel. Se não existir, será criada uma nova pasta de trabalho.</param>
            <param name="sheetName">Nome da folha a ser gravada na pasta de trabalho</param>
            <param name="data">Valores dos dados a serem gravados nas células da folha</param>
            <param name="startRow">Linha onde deve começar a gravação (com base em zero)</param>
            <param name="startColumn">Coluna onde deve começar a gravação (com base em zero)</param>
            <param name="overWrite">Se a folha deve ser recriada antes da gravação</param>
            <param name="writeAsString">Se os valores de dados devem ser gravados como sequências de caracteres ou não</param>
            <returns>Booleano que indica se a gravação na planilha foi feita com êxito.</returns>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.GetLargestColumnIndex(DocumentFormat.OpenXml.Spreadsheet.SheetData)">
            <summary>Considerando um conjunto de dados da pasta de trabalho, é retornado o maior índice de coluna para qualquer linha.</summary>
            <param name="sheetData">Dados da pasta de trabalho</param>
            <returns>O maior índice de coluna encontrado</returns>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.GetCellReference(System.Int32,System.UInt32)">
            <summary>Considerando os índices de coluna e linha, como 3 e 7, é retornada a referência da célula, C7 neste caso.</summary>
            <param name="columnIndex">Índice de coluna (com base em 1)</param>
            <param name="rowIndex">Índice de linha (com base em 1)</param>
            <returns>A referência da célula que corresponde à coluna e ao índice fornecidos</returns>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.GetColumnIndex(System.String)">
            <summary>Considerando uma referência de célula, como C7, é retornado o índice de coluna, C = 3 neste caso.</summary>
            <param name="cellReference">Uma referência de célula, como C7</param>
            <returns>O índice de coluna (com base em 1) equivalente à sequência de letras que identifica a coluna da célula</returns>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.GetCellValue(DocumentFormat.OpenXml.Spreadsheet.Cell,DocumentFormat.OpenXml.Spreadsheet.SharedStringTable,DocumentFormat.OpenXml.Spreadsheet.Stylesheet,System.Boolean)">
            <summary>Obtém o valor da célula, opcionalmente convertendo-a em uma sequência de caracteres.</summary>
            <param name="cell">Célula da qual o valor é obtido</param>
            <param name="sharedStringTable">Estrutura da planilha que contém os valores reais da sequência de caracteres</param>
            <param name="stylesheet">Seção de estilo da planilha, contendo informações de formatação</param>
            <param name="readAsString">Quando verdadeiro, uma sequência de caracteres será retornada ao invés do valor real da célula</param>
            <returns>O valor na célula, possivelmente convertido em uma sequência de caracteres</returns>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.GetWorksheetPart(DocumentFormat.OpenXml.Packaging.SpreadsheetDocument,System.String)">
            <summary>Obtém a planilha com o nome especificado do documento.</summary>
            <param name="document">Documento do qual deve ser obtida a planilha</param>
            <param name="sheetName">Nome da folha a ser obtida</param>
            <returns>A folha com o nome especificado ou nulo, se não tiver sido encontrada</returns>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.ContainsFunction(System.Object[][])">
            <summary>Verifica se os dados que foram passados contêm uma função.</summary>
            <param name="data"/>
            <returns/>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.OpenOrCreate(System.String,System.String)">
            <summary>Abre uma pasta de trabalho existente ou cria uma nova no caminho de arquivo especificado.</summary>
            <param name="filePath">Caminho do arquivo onde a pasta de trabalho está ou deve ser criada</param>
            <param name="sheetName">Caso uma nova pasta de trabalho seja criada, a folha utilizará esse nome</param>
            <returns>Um documento da planilha</returns>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.AddDefaultStyles(DocumentFormat.OpenXml.Spreadsheet.Stylesheet)">
            <summary>Adiciona estilos padrão à folha de estilos, de forma que o Office não identifique a planilha como corrompida.</summary>
            <param name="stylesheet">Seção da folha de estilo de um novo documento</param>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.RemoveWorksheetPart(DocumentFormat.OpenXml.Packaging.SpreadsheetDocument,DocumentFormat.OpenXml.Packaging.WorksheetPart)">
            <summary>Remove uma planilha do documento.</summary>
            <param name="document">Documento do qual deve ser removida a planilha</param>
            <param name="worksheetPart">Planilha a ser removida</param>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.AddWorksheetPart(DocumentFormat.OpenXml.Packaging.SpreadsheetDocument,System.String)">
            <summary>Adiciona uma planilha ao documento.</summary>
            <param name="document">Documento ao qual deve ser adicionada a planilha</param>
            <param name="sheetName">Nome da planilha a ser adicionada</param>
            <returns/>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.SetCellValue(System.Object,DocumentFormat.OpenXml.Spreadsheet.Cell,DocumentFormat.OpenXml.Spreadsheet.SharedStringTable,DocumentFormat.OpenXml.Spreadsheet.Stylesheet,System.Boolean)">
            <summary>Define o valor de uma célula, opcionalmente convertendo-a primeiro em uma sequência de caracteres.</summary>
            <param name="value">Valor a ser definido na célula</param>
            <param name="cell">Célula na qual o valor deve ser definido</param>
            <param name="sharedStringTable">Estrutura da planilha que contém os valores reais da sequência de caracteres</param>
            <param name="stylesheet">Seção de estilo da planilha, contendo informações de formatação</param>
            <param name="writeAsString">Quando verdadeiro, o valor será convertido em uma sequência de caracteres antes da gravação na célula</param>
        </member>
        <member name="T:DSOffice.Properties.Resources">
            <summary>Uma classe de recurso digitada com ênfase, para pesquisar sequências de caracteres etc.</summary>
        </member>
        <member name="P:DSOffice.Properties.Resources.ResourceManager">
            <summary>Retorna a instância do cache ResourceManager usada por esta classe.</summary>
        </member>
        <member name="P:DSOffice.Properties.Resources.Culture">
            <summary>Substitui a propriedade CurrentUICulture dos threads atuais para todas
              as pesquisas de recurso que usam esta classe de recurso digitada com ênfase.</summary>
        </member>
        <member name="P:DSOffice.Properties.Resources.ExcelCommunicationError">
            <summary>A pesquisa de sequência de caracteres localizada similar a Erro ao configurar a comunicação com o Excel.  Tente fechar qualquer instância de aba do Excel.</summary>
        </member>
        <member name="P:DSOffice.Properties.Resources.ExcelNotInstalled">
            <summary>Procura uma sequência de caracteres localizada similar a O Excel não está instalado. href=ExcelNotInstalled.html.</summary>
        </member>
        <member name="P:DSOffice.Properties.Resources.kMethodResolutionFailureWithTypes">
            <summary>A pesquisa de sequência de caracteres localizada similar a Um ou mais dos tipos de entrada não são coincidentes. Não foi possível localizar uma versão de {0} que obtém argumentos do tipo {1}.</summary>
        </member>
        <member name="P:DSOffice.Properties.Resources.ReadObsolete">
            <summary>A pesquisa de sequência de caracteres localizada similar a Usar o nó File.FromPath -&gt; Excel.ReadFromFile.</summary>
        </member>
        <member name="P:DSOffice.Properties.Resources.WorkbookNotFound">
            <summary>Procura uma sequência de caracteres localizada semelhante a Não foi encontrada nenhuma pasta de trabalho no caminho fornecido.</summary>
        </member>
        <member name="P:DSOffice.Properties.Resources.WorksheetNotFound">
            <summary>Procura uma sequência de caracteres localizada semelhante a Não foi encontrada nenhuma planilha com o nome “{0}” fornecido na pasta de trabalho.</summary>
        </member>
    </members>
</doc>