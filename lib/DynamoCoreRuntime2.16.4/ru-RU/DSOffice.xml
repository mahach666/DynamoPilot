<?xml version="1.0"?><doc>
    <assembly>
        <name>DSOffice</name>
    </assembly>
    <members>
        <member name="P:DSOffice.ExcelInterop.ExcelProcessRunning">
            <summary>Установите флажок, если запущен процесс Excel</summary>
        </member>
        <member name="P:DSOffice.ExcelInterop.HasValidExcelReference">
            <summary>Установите флажок, если этот объект содержит ссылки на данные Excel</summary>
        </member>
        <member name="M:DSOffice.ExcelInterop.TryQuitAndCleanup(System.Boolean)">
            <summary>Закройте все книги Excel, используя диалоговое окно «Сохранить как», если необходимо. Также завершите
            сбор и устранение избыточной информации и удалите ссылки на приложение Excel</summary>
        </member>
        <member name="M:DSOffice.Excel.ReadExcelFile(System.IO.FileInfo)">
            <summary>Чтение данного файла Excel и возврат рабочей книги</summary>
            <param name="file"/>
            <returns/>
        </member>
        <member name="M:DSOffice.Excel.GetWorksheetsFromExcelWorkbook(DSOffice.WorkBook)">
            <summary>Вывод списка всех таблиц в данной книге Excel</summary>
            <param name="workbook"/>
            <returns/>
        </member>
        <member name="M:DSOffice.Excel.GetExcelWorksheetByName(DSOffice.WorkBook,System.String)">
            <summary>Возврат таблицы в данной книге по имени</summary>
            <param name="workbook"/>
            <param name="name"/>
            <returns/>
        </member>
        <member name="M:DSOffice.Excel.GetDataFromExcelWorksheet(DSOffice.WorkSheet)">
            <summary>Чтение и извлечение данных из таблицы Excel</summary>
            <param name="worksheet"/>
            <returns/>
        </member>
        <member name="M:DSOffice.Excel.WriteDataToExcelWorksheet(DSOffice.WorkSheet,System.Int32,System.Int32,System.Object[][])">
            <summary>Данные записываются в указанную строку и столбец № (баз. 0) в заданной таблице,
            которая впоследствии возвращается</summary>
            <param name="worksheet"/>
            <param name="startRow"/>
            <param name="startColumn"/>
            <param name="data"/>
            <returns/>
        </member>
        <member name="M:DSOffice.Excel.AddExcelWorksheetToWorkbook(DSOffice.WorkBook,System.String)">
            <summary>Добавление новой таблицы Excel с заданным именем для заданной рабочей книги</summary>
            <param name="workbook"/>
            <param name="name"/>
            <returns/>
        </member>
        <member name="M:DSOffice.Excel.NewExcelWorkbook">
            <summary>Создание новой временной книги Excel</summary>
            <returns/>
        </member>
        <member name="M:DSOffice.Excel.SaveAsExcelWorkbook(DSOffice.WorkBook,System.String)">
            <summary>Сохранение данной книги Excel в указанный файл и ее возврат</summary>
            <param name="workbook"/>
            <param name="filename"/>
            <returns/>
        </member>
        <member name="M:DSOffice.Excel.ReadFromFile(System.IO.FileInfo,System.String,System.Boolean,System.Boolean)">
            <summary>Чтение данных из электронной таблицы Microsoft Excel. Данные считываются по строкам и
                возвращаются в виде наборов списков по строкам. Для индексов строк и столбцов предусмотрено нулевое значение.
                Например, значение в ячейке A1 будет отображаться в списке данных как [0; 0].
                Для работы с данным узлом потребуется установленное приложение Microsoft Excel.</summary>
            <param name="file">Файл электронной таблицы Microsoft Excel.</param>
            <param name="sheetName">Имя рабочего листа, содержащего данные.</param>
            <param name="readAsStrings">включение/выключение режима чтения файла Excel по строкам</param>
            <param name="showExcel">включение/выключение режима отображения и скрытия главного окна Excel</param>
            <returns name="data">Строки с данными из таблицы Excel.</returns>
            <search>office,excel,spreadsheet,ifequalreturnindex</search>
        </member>
        <member name="M:DSOffice.Excel.WriteToFile(System.String,System.String,System.Int32,System.Int32,System.Object[][],System.Boolean)">
            <summary>Запись данных в формате электронной таблицы Microsoft Excel. 
                Данные записываются построчно, при этом подчиненные списки 
                записываются последовательными рядами. Значения строк и столбцов
                отсчитываются от нуля; например, значение в списке данных 
                в точке [0; 0] будет записано в ячейку A1. Нулевые значения и пустые
                списки записывают в Excel как пустые ячейки. Для работы с этим узлом 
                необходимо приложение Microsoft Excel.</summary>
            <param name="filePath">Путь к файлу электронной таблицы Microsoft Excel.</param>
            <param name="sheetName">Имя рабочего набора для записи данных.</param>
            <param name="startRow">Начальная строка для записи данных. Введите 0 для записи в строку 1, 1 - для 2 и т. д.</param>
            <param name="startCol">Начальный столбец для записи данных. Введите 0 для записи в столбец A, 1 - для B и т. д.</param>
            <param name="data">Данные для записи в электронную таблицу.</param>
            <param name="overWrite"/>
            <returns name="data">Данные, записанные в электронной таблице.</returns>
            <search>office,excel,spreadsheet</search>
        </member>
        <member name="P:DSOffice.WorkSheet.Data">
            <summary>Возврат данных из таблицы (узел GetDataFromExcelWorksheet)</summary>
        </member>
        <member name="M:DSOffice.WorkSheet.#ctor(DSOffice.WorkBook,System.String,System.Boolean)">
            <summary>создание новой таблицы на основе данной книги и имени (узел AddExcelWorksheetToWorkbook)</summary>
            <param name="wbook"/>
            <param name="sheetName"/>
            <param name="overWrite"/>
        </member>
        <member name="M:DSOffice.WorkSheet.WriteData(System.Int32,System.Int32,System.Object[][],System.Boolean)">
            <summary>метод экземпляра, запись данных в существующую таблицу (узел WriteDataToExcelWorksheet)</summary>
            <param name="startRow"/>
            <param name="startColumn"/>
            <param name="data"/>
            <param name="writeAsString"/>
            <returns/>
        </member>
        <member name="P:DSOffice.WorkBook.Name">
            <summary/>
        </member>
        <member name="P:DSOffice.WorkBook.WorkSheets">
            <summary>(узел GetWorksheetsFromExcelWorkbook)</summary>
        </member>
        <member name="M:DSOffice.WorkBook.#ctor(System.String)">
            <summary>Создание новой книги, входными данными которой является имя листа и путь к файлу</summary>
        </member>
        <member name="M:DSOffice.WorkBook.CloseHidden">
            <summary>Вспомогательный метод для чтения книг с отключенной видимостью.</summary>
        </member>
        <member name="M:DSOffice.WorkBook.#ctor(DSOffice.WorkBook,System.String)">
            <summary>(узел SaveAsExcelWorkbook)</summary>
            <param name="wbook"/>
            <param name="filename"/>
        </member>
        <member name="M:DSOffice.WorkBook.ReadExcelFile(System.String)">
            <summary>(узел ReadExcelFile)</summary>
            <param name="path"/>
            <returns/>
        </member>
        <member name="M:DSOffice.WorkBook.GetWorksheetByName(System.String)">
            <summary>метод экземпляра, (узел GetExcelWorksheetByName)</summary>
            <param name="sheetName"/>
            <returns/>
        </member>
        <member name="T:DSOffice.Data">
            <summary>Методы импорта/экспорта категории.</summary>
        </member>
        <member name="M:DSOffice.Data.ExportCSV(System.String,System.Object[][])">
            <summary>Запись списка списков в файл с использованием формата разделения значений при помощи запятых. Внешний список обозначает строки, внутренний — столбцы.</summary>
            <param name="filePath">Путь для записи</param>
            <param name="data">Список списков для записи в файл CSV</param>
            <search>write,text,file</search>
        </member>
        <member name="M:DSOffice.Data.ImportCSV(System.String,System.Boolean)">
            <summary>Импортирует данные из файла CSV (значения, разделенные запятыми), помещает элементы в список и, при необходимости, выполняет перенос.</summary>
            <param name="filePath">Файл CSV для преобразования в список</param>
            <param name="transpose">Переключатель для переноса импортированных данных</param>
            <returns name="list">Список, в котором содержатся элементы в файле CSV</returns>
            <search>import,csv,comma,file,list,separate,transpose</search>
        </member>
        <member name="M:DSOffice.Data.ImportExcel(System.IO.FileInfo,System.String,System.Boolean,System.Boolean)">
            <summary>Чтение данных из электронной таблицы Microsoft Excel. Данные считываются по строкам и
                возвращаются в виде наборов списков по строкам. Для индексов строк и столбцов предусмотрено нулевое значение.
                Например, значение в ячейке A1 будет отображаться в списке данных как [0; 0].
                Для работы с данным узлом потребуется установленное приложение Microsoft Excel.</summary>
            <param name="file">Файл книги Excel</param>
            <param name="sheetName">Имя листа, в котором содержатся данные</param>
            <param name="readAsStrings">Переключатель для чтения ячеек по строкам</param>
            <param name="showExcel">Переключатель для отображения главного окна Excel</param>
            <returns name="data">Строки с данными из листа Excel</returns>
            <search>office,excel,spreadsheet,ifequalreturnindex</search>
        </member>
        <member name="M:DSOffice.Data.ExportExcel(System.String,System.String,System.Int32,System.Int32,System.Object[][],System.Boolean)">
            <summary>Запись данных в формате электронной таблицы Microsoft Excel. 
                Данные записываются построчно, при этом подчиненные списки 
                записываются последовательными рядами. Значения строк и столбцов
                отсчитываются от нуля; например, значение в списке данных 
                в точке [0; 0] будет записано в ячейку A1. Нулевые значения и пустые
                списки записывают в Excel как пустые ячейки. Для работы с этим узлом 
                необходимо приложение Microsoft Excel.</summary>
            <param name="filePath">Путь к файлу электронной таблицы Microsoft Excel</param>
            <param name="sheetName">Имя листа для записи данных</param>
            <param name="startRow">Начальная строка для записи данных. Введите 0 для записи в строку 1, 1 — для записи в строку 2 и т. д.</param>
            <param name="startColumn">Начальный столбец для записи данных. Введите 0 для записи в столбец A, 1 — для B и т. д.</param>
            <param name="data">Данные для записи в электронную таблицу</param>
            <param name="overWrite">True — перезаписать файл, False — не перезаписывать</param>
            <returns name="data">Данные, записанные в электронную таблицу</returns>
            <search>office,excel,spreadsheet</search>
        </member>
        <member name="M:DSOffice.Data.ExportToExcel(System.String,System.String,System.Int32,System.Int32,System.Object[][],System.Boolean,System.Boolean)">
            <summary>Запись данных в формате электронной таблицы в Microsoft Excel. Данные записываются построчно,
                при этом вложенные списки записываются последовательными рядами. Значения строк и столбцов
                отсчитываются от нуля; например, значение в списке данных в точке [0,0] будет
                записано в ячейку A1. Нулевые значения и пустые списки записывают в Excel 
                как пустые ячейки. Для работы с этим узлом необходимо приложение Microsoft Excel.</summary>
            <param name="filePath">Файл книги Excel</param>
            <param name="sheetName">Имя листа, в котором содержатся данные</param>
            <param name="startRow">Начальная строка для записи данных. Введите 0 для записи в строку 1, 1 — для строки 2 и т. д.</param>
            <param name="startColumn">Начальный столбец для записи данных. Введите 0 для записи в столбец A, 1 — для B и т. д.</param>
            <param name="data">Данные для записи в электронную таблицу</param>
            <param name="overWrite">Переключатель для очистки электронной таблицы перед записью</param>
            <param name="writeAsString">Переключатель для записи файла Excel по строкам</param>
            <returns name="data">Строки с данными из листа Excel</returns>
            <search>office,excel,spreadsheet</search>
        </member>
        <member name="M:DSOffice.Data.OpenXMLImportExcel(System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>Чтение данных из электронной таблицы Microsoft Excel с помощью стандарта Open XML.
            Данные считываются по строкам и возвращаются в виде набора списков по строке.
            Строки и столбцы индексируются нулями. Например, значение в ячейке A1
            отображается в списке данных в точке [0,0].</summary>
            <param name="filePath">Файл книги Excel</param>
            <param name="sheetName">Имя листа, в котором содержатся данные</param>
            <param name="startRow">Начальная строка для чтения данных. Введите 0 для чтения строки 1, 1 — строки 2 и т. д.</param>
            <param name="startColumn">Начальный столбец для чтения данных. Введите 0 для чтения столбца A, 1 — столбца B и т. д.</param>
            <param name="readAsString">Переключатель для чтения ячеек по строкам</param>
            <returns name="data">Строки с данными из листа Excel</returns>
            <search>office,excel,spreadsheet</search>
        </member>
        <member name="M:DSOffice.Data.OpenXMLExportExcel(System.String,System.String,System.Object[][],System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>Запись данных в электронную таблицу Microsoft Excel с помощью стандарта Open XML.
            Данные записываются по строкам, а вложенные списки — в виде последовательности строк.
            Строки и столбцы индексируются нулями. Например, значение в списке данных в точке [0,0]
            записывается в ячейку A1. Нулевые значения и пустые списки записываются в виде пустых ячеек.</summary>
            <param name="filePath">Файл книги Excel</param>
            <param name="sheetName">Имя листа, в котором содержатся данные</param>
            <param name="startRow">Начальная строка для записи данных. Введите 0 для записи в строку 1, 1 —- в строку для 2 и т. д.</param>
            <param name="startColumn">Начальный столбец для записи данных. Введите 0 для записи в столбец A, 1 — в столбец B и т. д.</param>
            <param name="data">Данные для записи в электронную таблицу</param>
            <param name="overWrite">Переключатель для очистки электронной таблицы перед записью</param>
            <param name="writeAsString">Переключатель для записи значений ячеек в виде строк</param>
            <search>office,excel,spreadsheet</search>
            <returns>Логическая операция, указывающая на успешную запись в электронную таблицу.</returns>
        </member>
        <member name="T:DSOffice.OpenXmlHelper">
            <summary>Чтение и запись файлов Excel с помощью пакета Open XML SDK.</summary>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.Read(System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>Чтение данных из таблицы Excel с помощью пакета Open XML SDK.</summary>
            <param name="filePath">Путь к файлу книги Excel</param>
            <param name="sheetName">Имя листа, которое будет читаться из книги</param>
            <param name="startRow">Строка, с которой начинается чтение (с отсчетом от нуля)</param>
            <param name="startColumn">Столбец, с которого начинается чтение (с отсчетом от нуля)</param>
            <param name="readAsString">Признак чтения значений ячеек в виде строк</param>
            <returns>Значения ячеек, считанные из электронной таблицы</returns>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.Write(System.String,System.String,System.Object[][],System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>Запись данных в электронную таблицу Excel с помощью пакет Open XML SDK.</summary>
            <param name="filePath">Путь к файлу книги Excel. Если его не существует, будет создана новая книга.</param>
            <param name="sheetName">Имя листа, который требуется записать в книгу</param>
            <param name="data">Значения данных, которые требуется записать в ячейки листа</param>
            <param name="startRow">Строка, с которой начинается запись (с отсчетом от нуля)</param>
            <param name="startColumn">Столбец, с которого начинается запись (с отсчетом от нуля)</param>
            <param name="overWrite">Признак повторного создания листа перед записью</param>
            <param name="writeAsString">Признак записи значений данных в виде строк</param>
            <returns>Логическая операция, указывающая на успешную запись в электронную таблицу.</returns>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.GetLargestColumnIndex(DocumentFormat.OpenXml.Spreadsheet.SheetData)">
            <summary>С учетом данных на листе возвращается наибольший индекс столбцов для всех строк.</summary>
            <param name="sheetData">Данные листа</param>
            <returns>Самый большой обнаруженный индекс столбцов</returns>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.GetCellReference(System.Int32,System.UInt32)">
            <summary>С учетом индексов столбцов и строк, например 3 и 7, возврат ссылки на ячейку, в данном случае — значение C7.</summary>
            <param name="columnIndex">Индекс столбца (с отсчетом от 1)</param>
            <param name="rowIndex">Индекс строки (с отсчетом от 1)</param>
            <returns>Ссылка на ячейку, которая соответствует указанному столбцу и индексу</returns>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.GetColumnIndex(System.String)">
            <summary>С учетом ссылки на ячейку, например C7, возврат индекса столбца, в данном случае — C = 3.</summary>
            <param name="cellReference">Ссылка на ячейку, например C7</param>
            <returns>Индекс столбца (с отсчетом от 1), эквивалентный последовательности букв, идентифицирующей столбец ячейки</returns>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.GetCellValue(DocumentFormat.OpenXml.Spreadsheet.Cell,DocumentFormat.OpenXml.Spreadsheet.SharedStringTable,DocumentFormat.OpenXml.Spreadsheet.Stylesheet,System.Boolean)">
            <summary>Получение значения из ячейки с преобразованием в строку при необходимости.</summary>
            <param name="cell">Ячейка, из которой получается значение</param>
            <param name="sharedStringTable">Структура электронной таблицы с фактическими значениями строк</param>
            <param name="stylesheet">Раздел стилей электронной таблицы с информацией о форматировании</param>
            <param name="readAsString">Если задано значение true, возвращается строка, а не фактическое значение ячейки</param>
            <returns>Значение в ячейке, возможно, преобразованное в строку</returns>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.GetWorksheetPart(DocumentFormat.OpenXml.Packaging.SpreadsheetDocument,System.String)">
            <summary>Получение листа с указанным именем из документа.</summary>
            <param name="document">Документ, из которого необходимо получить лист</param>
            <param name="sheetName">Имя листа для получения</param>
            <returns>Лист с указанным именем или нулевое значение, если он не найден</returns>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.ContainsFunction(System.Object[][])">
            <summary>Проверка наличия функции в данных после передачи.</summary>
            <param name="data"/>
            <returns/>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.OpenOrCreate(System.String,System.String)">
            <summary>Открытие существующей книги или создание новой с нуля по заданному пути к файлу.</summary>
            <param name="filePath">Путь к файлу, по которому находится или должна быть создана книга</param>
            <param name="sheetName">При создании новой книги в листе будет использоваться это имя</param>
            <returns>Электронная таблица</returns>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.AddDefaultStyles(DocumentFormat.OpenXml.Spreadsheet.Stylesheet)">
            <summary>Добавление стилей по умолчанию в таблицу стилей, чтобы в Office эта электронная таблица не считалась поврежденной.</summary>
            <param name="stylesheet">Раздел таблицы стилей нового документа</param>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.RemoveWorksheetPart(DocumentFormat.OpenXml.Packaging.SpreadsheetDocument,DocumentFormat.OpenXml.Packaging.WorksheetPart)">
            <summary>Удаление листа из документа.</summary>
            <param name="document">Документ, из которого требуется удалить лист</param>
            <param name="worksheetPart">Удаляемый лист</param>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.AddWorksheetPart(DocumentFormat.OpenXml.Packaging.SpreadsheetDocument,System.String)">
            <summary>Добавление листа в документ.</summary>
            <param name="document">Документ, в который требуется добавить лист</param>
            <param name="sheetName">Имя добавляемого листа</param>
            <returns/>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.SetCellValue(System.Object,DocumentFormat.OpenXml.Spreadsheet.Cell,DocumentFormat.OpenXml.Spreadsheet.SharedStringTable,DocumentFormat.OpenXml.Spreadsheet.Stylesheet,System.Boolean)">
            <summary>Задание значения ячейки с предварительным преобразованием в строку при необходимости.</summary>
            <param name="value">Значение, задаваемое в ячейке</param>
            <param name="cell">Ячейка, в которой следует задать значение</param>
            <param name="sharedStringTable">Структура электронной таблицы, в которой содержатся фактические значения строк</param>
            <param name="stylesheet">Раздел стилей электронной таблицы с информацией о форматировании</param>
            <param name="writeAsString">Если задано значение true, значение будет преобразовано в строку перед записью в ячейку</param>
        </member>
        <member name="T:DSOffice.Properties.Resources">
            <summary>Класс ресурса со строгим контролем типа, используемый для поиска локализованных строк и т. п.</summary>
        </member>
        <member name="P:DSOffice.Properties.Resources.ResourceManager">
            <summary>Возврат кэшированного экземпляра ResourceManager, используемого в данном классе.</summary>
        </member>
        <member name="P:DSOffice.Properties.Resources.Culture">
            <summary>Переопределение свойства CurrentUICulture текущего потока для всех
               случаев поиска ресурсов при использовании данного класса ресурса со строгим контролем типа.</summary>
        </member>
        <member name="P:DSOffice.Properties.Resources.ExcelCommunicationError">
            <summary>Поиск локализованной строки, подобной строке «Не удалось настроить связь с Excel.  Закройте все открытые экземпляры Excel».</summary>
        </member>
        <member name="P:DSOffice.Properties.Resources.ExcelNotInstalled">
            <summary>Поиск локализованной строки, подобной строке «Программа Excel не установлена. href=ExcelNotInstalled.html».</summary>
        </member>
        <member name="P:DSOffice.Properties.Resources.kMethodResolutionFailureWithTypes">
            <summary>Поиск локализованной строки, подобной строке «Один или несколько типов ввода не совпадают. Не удалось найти версию {0}, в которой используются аргументы типа {1}».</summary>
        </member>
        <member name="P:DSOffice.Properties.Resources.ReadObsolete">
            <summary>Поиск локализованной строки, подобной строке «Используйте узел File.FromPath -&gt; Excel.ReadFromFile».</summary>
        </member>
        <member name="P:DSOffice.Properties.Resources.WorkbookNotFound">
            <summary>Поиск локализованной строки, подобной строке «Рабочая книга не найдена по указанному пути».</summary>
        </member>
        <member name="P:DSOffice.Properties.Resources.WorksheetNotFound">
            <summary>Поиск локализованной строки, подобной строке «Лист с указанным именем «{0}» не найден в книге.</summary>
        </member>
    </members>
</doc>