<?xml version="1.0"?><doc>
    <assembly>
        <name>DSOffice</name>
    </assembly>
    <members>
        <member name="P:DSOffice.ExcelInterop.ExcelProcessRunning">
            <summary>檢查 Excel 程序是否執行中</summary>
        </member>
        <member name="P:DSOffice.ExcelInterop.HasValidExcelReference">
            <summary>檢查此物件是否保留 Excel 的參考</summary>
        </member>
        <member name="M:DSOffice.ExcelInterop.TryQuitAndCleanup(System.Boolean)">
            <summary>關閉所有 Excel 活頁簿，並提供「另存」對話方塊 (如有需要)。此外，執行
            垃圾收集，並移除 Excel 應用程式的參考</summary>
        </member>
        <member name="M:DSOffice.Excel.ReadExcelFile(System.IO.FileInfo)">
            <summary>讀取給定的 Excel 檔，並傳回一個活頁簿</summary>
            <param name="file"/>
            <returns/>
        </member>
        <member name="M:DSOffice.Excel.GetWorksheetsFromExcelWorkbook(DSOffice.WorkBook)">
            <summary>傳回一個清單，列出給定的 Excel 工作簿中呈現的所有活頁簿</summary>
            <param name="workbook"/>
            <returns/>
        </member>
        <member name="M:DSOffice.Excel.GetExcelWorksheetByName(DSOffice.WorkBook,System.String)">
            <summary>依其名稱傳回給定之活頁簿中的工作表</summary>
            <param name="workbook"/>
            <param name="name"/>
            <returns/>
        </member>
        <member name="M:DSOffice.Excel.GetDataFromExcelWorksheet(DSOffice.WorkSheet)">
            <summary>從給定的 Excel 工作表讀取並擷取資料</summary>
            <param name="worksheet"/>
            <returns/>
        </member>
        <member name="M:DSOffice.Excel.WriteDataToExcelWorksheet(DSOffice.WorkSheet,System.Int32,System.Int32,System.Object[][])">
            <summary>在給定工作表的給定列和欄號碼 (基準 0) 中寫入給定資料，
            並傳回工作表</summary>
            <param name="worksheet"/>
            <param name="startRow"/>
            <param name="startColumn"/>
            <param name="data"/>
            <returns/>
        </member>
        <member name="M:DSOffice.Excel.AddExcelWorksheetToWorkbook(DSOffice.WorkBook,System.String)">
            <summary>將具有給定名稱的新 Excel 工作表加入至給定活頁簿</summary>
            <param name="workbook"/>
            <param name="name"/>
            <returns/>
        </member>
        <member name="M:DSOffice.Excel.NewExcelWorkbook">
            <summary>建立新的暫存 Excel 活頁簿</summary>
            <returns/>
        </member>
        <member name="M:DSOffice.Excel.SaveAsExcelWorkbook(DSOffice.WorkBook,System.String)">
            <summary>將給定的 Excel 活頁簿儲存至給定的檔案路徑，並傳回它</summary>
            <param name="workbook"/>
            <param name="filename"/>
            <returns/>
        </member>
        <member name="M:DSOffice.Excel.ReadFromFile(System.IO.FileInfo,System.String,System.Boolean,System.Boolean)">
            <summary>從 Microsoft Excel 試算表讀取資料。依列讀取資料，並依列
                以一系列清單傳回資料。列和欄的索引是以零開始；
                例如，儲存格 A1 中的值將出現在資料清單中的 [0,0]。
                此節點需要安裝 Microsoft Excel。</summary>
            <param name="file">表示 Microsoft Excel 試算表的檔案。</param>
            <param name="sheetName">包含資料的試算表名稱。</param>
            <param name="readAsStrings">切換是否將 Excel 檔案讀取為只有字串</param>
            <param name="showExcel">切換以展示或隱藏主要的 Excel 視窗</param>
            <returns name="data">來自 Excel 試算表的資料列。</returns>
            <search>office,excel,spreadsheet,ifequalreturnindex</search>
        </member>
        <member name="M:DSOffice.Excel.WriteToFile(System.String,System.String,System.Int32,System.Int32,System.Object[][],System.Boolean)">
            <summary>將資料寫入至 Microsoft Excel 試算表。資料是由列寫入，
                而子清單則是以連續列寫入。列和欄的索引是以零開始；
                例如，資料清單中位於 [0,0] 的值將寫入至儲存格 A1。
                此節點需要安裝 Microsoft Excel 安裝。</summary>
            <param name="filePath">Microsoft Excel 試算表的檔案路徑。</param>
            <param name="sheetName">要將資料寫入其中的試算表名稱。</param>
            <param name="startRow">用於寫入資料的開始列。輸入 0 表示第 1 列，輸入 1 表示第 2 列，依此類推。</param>
            <param name="startCol">用於寫入資料的開始欄。輸入 0 表示 A 欄，輸入 1 表示 B 欄，依此類推。</param>
            <param name="data">要寫入至試算表的資料。</param>
            <param name="overWrite"/>
            <returns name="data">已寫入至試算表的資料。</returns>
            <search>office,excel,spreadsheet</search>
        </member>
        <member name="P:DSOffice.WorkSheet.Data">
            <summary>從給定工作表 (GetDataFromExcelWorksheet 節點) 傳回資料</summary>
        </member>
        <member name="M:DSOffice.WorkSheet.#ctor(DSOffice.WorkBook,System.String,System.Boolean)">
            <summary>從給定的活頁簿和名稱建立新的工作表 (AddExcelWorksheetToWorkbook 節點)</summary>
            <param name="wbook"/>
            <param name="sheetName"/>
            <param name="overWrite"/>
        </member>
        <member name="M:DSOffice.WorkSheet.WriteData(System.Int32,System.Int32,System.Object[][],System.Boolean)">
            <summary>例證方法，將資料寫入至既有工作表，(WriteDataToExcelWorksheet 節點)</summary>
            <param name="startRow"/>
            <param name="startColumn"/>
            <param name="data"/>
            <param name="writeAsString"/>
            <returns/>
        </member>
        <member name="P:DSOffice.WorkBook.Name">
            <summary/>
        </member>
        <member name="P:DSOffice.WorkBook.WorkSheets">
            <summary>(GetWorksheetsFromExcelWorkbook 節點)</summary>
        </member>
        <member name="M:DSOffice.WorkBook.#ctor(System.String)">
            <summary>建立以檔案路徑和工作表名稱做為輸入的新活頁簿</summary>
        </member>
        <member name="M:DSOffice.WorkBook.CloseHidden">
            <summary>讀取已停用可見度之活頁簿的輔助程式方法。</summary>
        </member>
        <member name="M:DSOffice.WorkBook.#ctor(DSOffice.WorkBook,System.String)">
            <summary>(SaveAsExcelWorkbook 節點)</summary>
            <param name="wbook"/>
            <param name="filename"/>
        </member>
        <member name="M:DSOffice.WorkBook.ReadExcelFile(System.String)">
            <summary>(ReadExcelFile 節點)</summary>
            <param name="path"/>
            <returns/>
        </member>
        <member name="M:DSOffice.WorkBook.GetWorksheetByName(System.String)">
            <summary>例證方法，(GetExcelWorksheetByName 節點)</summary>
            <param name="sheetName"/>
            <returns/>
        </member>
        <member name="T:DSOffice.Data">
            <summary>匯入 / 匯出」品類的方法。</summary>
        </member>
        <member name="M:DSOffice.Data.ExportCSV(System.String,System.Object[][])">
            <summary>寫入到清單中列示的檔案使用逗號分隔值
                格式。 外部清單表示列、內部清單表示欄。</summary>
            <param name="filePath">要寫入的路徑</param>
            <param name="data">清單中列示了要寫入至 CSV</param>
            <search>write,text,file</search>
        </member>
        <member name="M:DSOffice.Data.ImportCSV(System.String,System.Boolean)">
            <summary>將資料從 CSV (逗號分隔值) 檔，將料件插入清單和
                轉置它 (如果需要)。</summary>
            <param name="filePath">要轉換為清單的 CSV 檔</param>
            <param name="transpose">切換以轉置匯入的資料</param>
            <returns name="list">包含 CSV 檔中項目的清單</returns>
            <search>import,csv,comma,file,list,separate,transpose</search>
        </member>
        <member name="M:DSOffice.Data.ImportExcel(System.IO.FileInfo,System.String,System.Boolean,System.Boolean)">
            <summary>從 Microsoft Excel 試算表讀取資料。依列讀取資料，並依列
                以一系列清單傳回資料。列和欄的索引是以零開始；
                例如，儲存格 A1 中的值將出現在資料清單中的 [0,0]。
                此節點需要安裝 Microsoft Excel。</summary>
            <param name="file">表示 Excel 活頁簿的檔案</param>
            <param name="sheetName">包含資料的工作表名稱</param>
            <param name="readAsStrings">切換以將儲存格讀取為字串</param>
            <param name="showExcel">切換以顯示 Excel 的主要視窗</param>
            <returns name="data">來自 Excel 工作表的資料列</returns>
            <search>office,excel,spreadsheet,ifequalreturnindex</search>
        </member>
        <member name="M:DSOffice.Data.ExportExcel(System.String,System.String,System.Int32,System.Int32,System.Object[][],System.Boolean)">
            <summary>將資料寫入至 Microsoft Excel 試算表。依列寫入資料，
                並以連續列寫入子清單。列和欄的索引是以零開始；
                例如，資料清單中位於 [0,0] 的值將寫入至儲存格 A1。
                空值和空白清單會寫入至 Excel 成為空白儲存格。
                此節點需要安裝 Microsoft Excel。</summary>
            <param name="filePath">Microsoft Excel 試算表的檔案路徑</param>
            <param name="sheetName">要將資料寫入其中的工作表名稱</param>
            <param name="startRow">用於寫入資料的開始列。輸入 0 表示第 1 列，輸入 1 表示第 2 列，依此類推。</param>
            <param name="startColumn">寫入資料的開始欄。輸入 0 表示 A 欄，輸入 1 表示 B 欄，依此類推。</param>
            <param name="data">要寫入至試算表的資料</param>
            <param name="overWrite">true 覆蓋檔案，false 不要覆蓋</param>
            <returns name="data">已寫入至試算表的資料</returns>
            <search>office,excel,spreadsheet</search>
        </member>
        <member name="M:DSOffice.Data.ExportToExcel(System.String,System.String,System.Int32,System.Int32,System.Object[][],System.Boolean,System.Boolean)">
            <summary>將資料寫入至 Microsoft Excel 試算表。資料是依列寫入，
                而子清單則是以連續列寫入。列和欄的索引是以零開始；
                例如，資料清單中位於 [0,0] 的值將寫入至儲存格 A1。
                此節點需要安裝 Microsoft Excel。</summary>
            <param name="filePath">表示 Excel 活頁簿的檔案</param>
            <param name="sheetName">包含資料的工作表名稱</param>
            <param name="startRow">用於寫入資料的開始列。輸入 0 表示第 1 列，輸入 1 表示第 2 列，依此類推。</param>
            <param name="startColumn">寫入資料的開始欄。輸入 0 表示 A 欄，輸入 1 表示 B 欄，依此類推。</param>
            <param name="data">要寫入至試算表的資料</param>
            <param name="overWrite">切換以在寫入前清除試算表</param>
            <param name="writeAsString">切換是否將 Excel 檔案寫入為字串</param>
            <returns name="data">來自 Excel 工作表的資料列</returns>
            <search>office,excel,spreadsheet</search>
        </member>
        <member name="M:DSOffice.Data.OpenXMLImportExcel(System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>使用 Open XML 標準，從 Microsoft Excel 試算表讀取資料。
            資料會依列讀取，並依列以一系列清單傳回。
            列和欄的索引是以零開始；例如，儲存格 A1 中的值
            將出現在資料清單中的 [0,0]。</summary>
            <param name="filePath">表示 Excel 活頁簿的檔案</param>
            <param name="sheetName">包含資料的工作表名稱</param>
            <param name="startRow">用於讀取資料的開始列。輸入 0 表示第 1 列，輸入 1 表示第 2 列，依此類推。</param>
            <param name="startColumn">用於讀取資料的開始欄。輸入 0 表示 A 欄，輸入 1 表示 B 欄，依此類推。</param>
            <param name="readAsString">切換以將儲存格讀取為字串</param>
            <returns name="data">來自 Excel 工作表的資料列</returns>
            <search>office,excel,spreadsheet</search>
        </member>
        <member name="M:DSOffice.Data.OpenXMLExportExcel(System.String,System.String,System.Object[][],System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>使用 Open XML 標準，將資料寫入至 Microsoft Excel 試算表。
            資料會依列寫入，而子清單則會以連續列寫入。
            列和欄的索引是以零開始；例如，資料清單中位於 [0,0] 的值
            將寫入至儲存格 A1。空值和空白清單會寫入為空白儲存格。</summary>
            <param name="filePath">表示 Excel 活頁簿的檔案</param>
            <param name="sheetName">包含資料的工作表名稱</param>
            <param name="startRow">用於寫入資料的開始列。輸入 0 表示第 1 列，輸入 1 表示第 2 列，依此類推。</param>
            <param name="startColumn">用於寫入資料的開始欄。輸入 0 表示 A 欄，輸入 1 表示 B 欄，依此類推。</param>
            <param name="data">要寫入至試算表的資料</param>
            <param name="overWrite">切換以在寫入前清除試算表</param>
            <param name="writeAsString">切換是否將儲存格值寫入為字串</param>
            <search>office,excel,spreadsheet</search>
            <returns>布林值，指出寫入試算表是否成功。</returns>
        </member>
        <member name="T:DSOffice.OpenXmlHelper">
            <summary>使用 Open XML SDK 處理讀取和寫入 Excel 檔案。</summary>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.Read(System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>使用 Open XML SDK 從 Excel 試算表讀取資料。</summary>
            <param name="filePath">Excel 活頁簿檔案的路徑</param>
            <param name="sheetName">要從活頁簿內讀取的工作表名稱</param>
            <param name="startRow">要開始讀取的列 (從零開始)</param>
            <param name="startColumn">要開始讀取的欄 (從零開始)</param>
            <param name="readAsString">是否將儲存格值讀取為字串</param>
            <returns>從試算表讀取的儲存格值</returns>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.Write(System.String,System.String,System.Object[][],System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>使用 Open XML SDK 將資料寫入至 Excel 試算表。</summary>
            <param name="filePath">Excel 活頁簿檔案的路徑。如果不存在，則會建立新的活頁簿。</param>
            <param name="sheetName">要寫入至活頁簿內的工作表名稱</param>
            <param name="data">要寫入至工作表儲存格的資料值</param>
            <param name="startRow">要開始寫入的列 (從零開始)</param>
            <param name="startColumn">要開始寫入的欄 (從零開始)</param>
            <param name="overWrite">寫入前是否應重新建立工作表</param>
            <param name="writeAsString">資料值是否應寫為字串</param>
            <returns>布林值，指出寫入試算表是否成功。</returns>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.GetLargestColumnIndex(DocumentFormat.OpenXml.Spreadsheet.SheetData)">
            <summary>給定工作表的資料，它會傳回任何列的最大欄索引。</summary>
            <param name="sheetData">工作表的資料</param>
            <returns>找到的最大欄索引</returns>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.GetCellReference(System.Int32,System.UInt32)">
            <summary>給定欄和列的索引 (例如 3 和 7)，它會傳回儲存格參考 (在此例為 C7)。</summary>
            <param name="columnIndex">欄索引 (從 1 開始)</param>
            <param name="rowIndex">列索引 (從 1 開始)</param>
            <returns>與提供的欄和索引相符的儲存格參考</returns>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.GetColumnIndex(System.String)">
            <summary>給定儲存格參考 (例如 C7)，它會傳回欄索引 (在此例為 C = 3)。</summary>
            <param name="cellReference">儲存格參考 (例如 C7)</param>
            <returns>與指出儲存格欄之字母順序對等的欄索引 (從 1 開始)</returns>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.GetCellValue(DocumentFormat.OpenXml.Spreadsheet.Cell,DocumentFormat.OpenXml.Spreadsheet.SharedStringTable,DocumentFormat.OpenXml.Spreadsheet.Stylesheet,System.Boolean)">
            <summary>從儲存格取得值，可選擇將其轉換為字串。</summary>
            <param name="cell">要取得其值的儲存格</param>
            <param name="sharedStringTable">包含實際字串值的試算表結構</param>
            <param name="stylesheet">試算表的型式區段，包含格式資訊</param>
            <param name="readAsString">如果為 true，將傳回字串，而非實際儲存格值</param>
            <returns>儲存格內的值，可能轉換為字串</returns>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.GetWorksheetPart(DocumentFormat.OpenXml.Packaging.SpreadsheetDocument,System.String)">
            <summary>從文件中取得具有指定名稱的工作表。</summary>
            <param name="document">要從中取得工作表的文件</param>
            <param name="sheetName">要取得的工作表名稱</param>
            <returns>具有指定名稱的工作表，如果找不到則為空值</returns>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.ContainsFunction(System.Object[][])">
            <summary>檢查傳入的資料是否包含函數。</summary>
            <param name="data"/>
            <returns/>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.OpenOrCreate(System.String,System.String)">
            <summary>開啟既有的活頁簿，或在指定的檔案路徑從頭開始建立一個活頁簿。</summary>
            <param name="filePath">活頁簿所在或應建立活頁簿的檔案路徑</param>
            <param name="sheetName">如果建立了新活頁簿，工作表將使用此名稱</param>
            <returns>試算表文件</returns>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.AddDefaultStyles(DocumentFormat.OpenXml.Spreadsheet.Stylesheet)">
            <summary>將預設型式加到型式表中，讓 Office 不會將試算表識別為損毀。</summary>
            <param name="stylesheet">新文件的型式表區段</param>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.RemoveWorksheetPart(DocumentFormat.OpenXml.Packaging.SpreadsheetDocument,DocumentFormat.OpenXml.Packaging.WorksheetPart)">
            <summary>從文件中移除工作表。</summary>
            <param name="document">要從中移除工作表的文件</param>
            <param name="worksheetPart">要移除的工作表</param>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.AddWorksheetPart(DocumentFormat.OpenXml.Packaging.SpreadsheetDocument,System.String)">
            <summary>將工作表新增到文件中。</summary>
            <param name="document">要新增工作表的文件</param>
            <param name="sheetName">要新增的工作表名稱</param>
            <returns/>
        </member>
        <member name="M:DSOffice.OpenXmlHelper.SetCellValue(System.Object,DocumentFormat.OpenXml.Spreadsheet.Cell,DocumentFormat.OpenXml.Spreadsheet.SharedStringTable,DocumentFormat.OpenXml.Spreadsheet.Stylesheet,System.Boolean)">
            <summary>設定儲存格的值，可選擇將其先轉換為字串。</summary>
            <param name="value">要在儲存格中設定的值</param>
            <param name="cell">要設定值的儲存格</param>
            <param name="sharedStringTable">包含實際字串值的試算表結構</param>
            <param name="stylesheet">試算表的型式區段，包含格式資訊</param>
            <param name="writeAsString">如果為 true，值會先轉換為字串，然後再寫入儲存格</param>
        </member>
        <member name="T:DSOffice.Properties.Resources">
            <summary>一種強型別資源類別，用於查找本土化的字串，等等。</summary>
        </member>
        <member name="P:DSOffice.Properties.Resources.ResourceManager">
            <summary>傳回快取的資源管理員例證使用此類別。</summary>
        </member>
        <member name="P:DSOffice.Properties.Resources.Culture">
            <summary>為使用此強類型資源類別查找的所有資源，
              取代目前執行緒的 CurrentUICulture 性質。</summary>
        </member>
        <member name="P:DSOffice.Properties.Resources.ExcelCommunicationError">
            <summary>查找類似於「設定與 Excel 的通訊時發生錯誤」的本土化字串。請嘗試關閉所有開啟的 Excel 例證。</summary>
        </member>
        <member name="P:DSOffice.Properties.Resources.ExcelNotInstalled">
            <summary>查找類似於「未安裝 Excel。href=ExcelNotInstalled.html」的本土化字串。</summary>
        </member>
        <member name="P:DSOffice.Properties.Resources.kMethodResolutionFailureWithTypes">
            <summary>查找類似於「一個或多個輸入類型不相符」的本土化字串。找不到採用類型 {1} 之引數的 {0} 版本。</summary>
        </member>
        <member name="P:DSOffice.Properties.Resources.ReadObsolete">
            <summary>查找類似於「改用 File.FromPath -&gt; Excel.ReadFromFile 節點。」的本土化字串。</summary>
        </member>
        <member name="P:DSOffice.Properties.Resources.WorkbookNotFound">
            <summary>查找類似於「在提供的路徑找不到活頁簿。」的本土化字串。</summary>
        </member>
        <member name="P:DSOffice.Properties.Resources.WorksheetNotFound">
            <summary>查找類似於「在活頁簿中找不到具有提供名稱「{0}」的工作表。」的本土化字串。</summary>
        </member>
    </members>
</doc>